{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/todo.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-2\\\"></div>\\n  <div class=\\\"col-md-8\\\">\\n    <br><br/>\\n    <form>\\n      <div class=\\\"form-row\\\">\\n\\n        <div class=\\\"col-md-5\\\">\\n          <input type=\\\"text\\\" name=\\\"task\\\" id=\\\"task\\\" [(ngModel)]=\\\"newTodo.task\\\" placeholder=\\\"task\\\" class=\\\"form-control\\\">\\n        </div>\\n       \\n        <div class=\\\"col-md-2\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"create()\\\">Add</button>\\n        </div>\\n      </div>\\n    </form>\\n    <br><br/>\\n    <div class=\\\"todos\\\" *ngIf=\\\"todosList\\\">\\n      <table class=\\\"table\\\">\\n        <thead class=\\\"h\\\">\\n          <tr class=\\\"h\\\">\\n            <th class=\\\"h\\\">Task</th>\\n          \\n            <th class=\\\"h\\\">Status</th>\\n            <th class=\\\"h\\\">Options</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr class=\\\"todo\\\" (dblclick)=\\\"editTodo(todo)\\\" *ngFor=\\\"let todo of todosList\\\">\\n\\n            <ng-container *ngIf=\\\"!editTodos.includes(todo); else editTD\\\">\\n              <td>{{todo.task}}</td>\\n             \\n              <td>{{todo.status}}</td>\\n            </ng-container>\\n\\n            <ng-template #editTD>\\n                <td><input type=\\\"text\\\" name=\\\"task\\\" id=\\\"task\\\" (keypress)=\\\"submitTodo($event, todo)\\\" [(ngModel)]=\\\"todo.task\\\" placeholder=\\\"Task\\\" class=\\\"form-control\\\"></td>\\n               \\n                <td>\\n                  <input type=\\\"text\\\" name=\\\"status\\\" id=\\\"status\\\" (keypress)=\\\"submitTodo($event, todo)\\\" [(ngModel)]=\\\"todo.status\\\" placeholder=\\\"Status\\\" class=\\\"form-control\\\">\\n                </td>\\n            </ng-template>\\n\\n            <td class=\\\"o\\\">\\n              <button class=\\\"btn btn-success\\\" (click)=\\\"doneTodo(todo)\\\">\\n                <i  class=\\\"fa fa-check\\\"></i>\\n              </button>\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"editTodo(todo)\\\">\\n                  <i  class=\\\"fa fa-pencil\\\"></i>\\n                </button>\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteTodo(todo)\\\">\\n                  <i  class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n            </td>\\n\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n\\n   \\n  </div>\\n  <div class=\\\"col-md-2\\\">\\n  \\n  </div>\\n</div>\"","module.exports = \".btn {\\n  cursor: pointer; }\\n\\ntd {\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3N1bWVldC90YWN0by10b2RvLWFwcC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxtQkFBbUI7RUFDbkIsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRue1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxudGR7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufSJdfQ== */\"","import ToDo from './models/todo.model';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  public newTodo: ToDo = new ToDo()\n\n  todosList: ToDo[] = [];\n  editTodos: ToDo[] = [];\n  title = 'app';\n\n  ngOnInit(): void {\n    \n  }\n\n\n  create() {\n        if(this.newTodo.task){\n          this.todosList.push(this.newTodo);\n          this.newTodo = new ToDo()\n        }\n        \n  }\n\n  editTodo(todo: ToDo) {\n    console.log(todo)\n    if(this.todosList.includes(todo)){\n      if(!this.editTodos.includes(todo)){\n        this.editTodos.push(todo)\n      }else{\n        this.editTodos.splice(this.editTodos.indexOf(todo), 1)\n       \n      }\n    }\n  }\n\n  doneTodo(todo:ToDo){\n    todo.status = 'Done'\n    \n  }\n\n  submitTodo(event, todo:ToDo){\n    if(event.keyCode ==13){\n      this.editTodo(todo)\n    }\n  }\n\n  deleteTodo(todo: ToDo) {\n    this.todosList.splice(this.todosList.indexOf(todo), 1);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","class ToDo {\n    _id:string;\n    task: string;\n    status: string;\n\n    constructor(\n    ){\n        this.task = \"\"\n        this.status = \"\"\n    }\n}\n\nexport default ToDo;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}